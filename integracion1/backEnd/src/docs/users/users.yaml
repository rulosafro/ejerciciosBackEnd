paths: 
  /api/users:
    get:
      summary: Obtiene todos los usuarios [Admin]
      tags: 
        - Users
      security:
        - cookieAuth: []
      responses:
        "200":
          description: Los usuarios fueron obtenidos correctamente
          content:
            application/json:
              schema:
                type: array
                items: 
                  $ref: '#components/schemas/User'
        "500":
          description: Error interno del server 
    post:
      summary: Crea un nuevo usuario [Admin]
      tags:
        - Users
      security:
        - cookieAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#components/requestBodies/updateUser'
      responses:
        "201":
          description: El usuario fue creado correctamente
  
  /api/users/{uid}:
    get:
      summary: Obtiene el usuario del id [Admin]
      tags: 
        - Users
      security:
        - cookieAuth: []
      parameters:
      - name: uid
        in: path
        required: true
        description: El id del usuario a solicitar
        schema:
          $type: String
      responses:
        "200":
          description: Los usuarios fue obtenido correctamente
          content:
            application/json:
              schema:
                $ref: '#components/schemas/User'
        "500":
          description: Error interno del server 
  
    delete:
      summary: Eliminar un usuario [Admin]
      tags:
        - Users
      security:
        - cookieAuth: []
      parameters:
      - name: uid
        in: path
        required: true
        description: El id del usuario a eliminar
        schema:
          $type: String
      responses:
        "200": 
          description: El usuario fue eliminado

components:
  schemas:
    User:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por Mongo
        first_name:
          type: string
          description: Primer nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del  usuario
        password:
          type: string
          description: Contraseña encriptada
      example:
        _id: ObjectId('')
        first_name: Javier
        last_name: Ramírez
        email: a@a.com
        password: sdfljsdauiovcndfvo;aefaerf23edc

  requestBodies:
    updateUser:
      type: object
      properties:
        _id:
          type: string
          description: ID autogenerado por Mongo
        first_name:
          type: string
          description: Primer nombre del usuario
        last_name:
          type: string
          description: Apellido del usuario
        email:
          type: string
          description: Email del  usuario
        password:
          type: string
          description: Contraseña encriptada
      example:
        first_name: Javier
        last_name: Ramírez
        email: a@a.com
        password: sdfljsdauiovcndfvo;aefaerf23edc